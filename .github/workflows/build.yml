name: Build ASI

on: [push]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v1
      with:
        vs-version: '17.0'  # VS 2022

    - name: Prepare environment
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        echo Include paths: %INCLUDE%
        echo Lib paths: %LIB%
        where cl
        where link

    - name: Prepare JS parts
      shell: pwsh
      run: |
        # Проверка наличия файла
        if (-not (Test-Path "custom.js")) {
            Write-Error "File custom.js not found!"
            exit 1
        }

        # Создаем структуру папок
        New-Item -ItemType Directory -Path "ASI_Loader" -Force
        New-Item -ItemType Directory -Path "ASI_Loader/js_parts" -Force

        # Читаем файл как текст
        $content = [System.IO.File]::ReadAllText("custom.js", [System.Text.Encoding]::UTF8)
        Write-Host "Read JS file with length: $($content.Length)"

        # Разбиваем на части по 15KB
        $chunkSize = 15000
        $parts = @()
        for ($i=0; $i -lt $content.Length; $i+=$chunkSize) {
            $length = [Math]::Min($chunkSize, $content.Length - $i)
            $chunk = $content.Substring($i, $length)
            $partPath = "ASI_Loader/js_parts/part_$($i.ToString('00000')).h"
            Set-Content -Path $partPath -Value "R\"=====($chunk)=====\"" -NoNewline
            $parts += $partPath
            Write-Host "Created part: $partPath"
        }

        # Генерируем заголовочный файл
        $headerContent = @"
// Auto-generated file
const char* js_parts[] = {
$($parts | ForEach-Object { Get-Content $_ -Raw } | Join-String -Separator ",\n")
};
const int js_parts_count = $($parts.Count);
"@
        Set-Content -Path "ASI_Loader/js_data.h" -Value $headerContent
        Write-Host "Generated js_data.h"

    - name: Compile ASI
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        
        echo ==== COMPILE COMMAND ====
        cl /nologo /EHsc /std:c++17 /LD /Fe:ASI_Loader.asi ASI_Loader\ASI_Loader.cpp shlwapi.lib
        
        echo ==== DIR AFTER COMPILE ====
        dir
        
        if exist ASI_Loader.asi (
            echo !!! SUCCESS: ASI compiled !!!
        ) else (
            echo !!! ERROR: Compilation failed !!!
            exit 1
        )

    - uses: actions/upload-artifact@v4
      with:
        name: ASI_Loader
        path: ASI_Loader.asi
