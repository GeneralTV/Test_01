name: Build ASI

on: [push]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Prepare JS parts
      shell: pwsh
      run: |
        # 1. Создаем папку для частей
        New-Item -ItemType Directory -Path "ASI_Loader/js_parts" -Force

        # 2. Читаем файл как бинарный (чтобы избежать проблем с кодировкой)
        $bytes = [System.IO.File]::ReadAllBytes("custom.js")
        $chunkSize = 16KB # Размер части

        # 3. Разбиваем на части
        $parts = [System.Collections.ArrayList]@()
        for ($i=0; $i -lt $bytes.Length; $i+=$chunkSize) {
            $chunk = $bytes[$i..[Math]::Min($i+$chunkSize-1, $bytes.Length-1)]
            $path = "ASI_Loader/js_parts/part_$($i.ToString('00000')).h"
            [System.IO.File]::WriteAllText($path, 
                "R\"=====(" + 
                [System.Text.Encoding]::UTF8.GetString($chunk) + 
                ")=====\"")
            $parts.Add($path) | Out-Null
        }

        # 4. Генерируем основной заголовочный файл
        $headerContent = @"
const char* js_parts[] = {
$((Get-Content $parts -Raw) -join ",\n")
};
const int js_parts_count = $($parts.Count);
"@
        Set-Content -Path "ASI_Loader/js_data.h" -Value $headerContent

    - name: Compile
      shell: cmd
      run: |
        cl /EHsc /std:c++17 /LD ASI_Loader\ASI_Loader.cpp /Fe:ASI_Loader.asi /link shlwapi.lib
        if %errorlevel% neq 0 exit /b %errorlevel%

    - uses: actions/upload-artifact@v4
      with:
        name: ASI_Loader
        path: ASI_Loader.asi
